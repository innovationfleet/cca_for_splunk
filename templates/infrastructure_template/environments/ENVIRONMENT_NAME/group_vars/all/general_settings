# Version parameter is used to validate this file
# against cca_for_splunk framework requirements.
cca_infrastructure_general_settings_file_version: '2024.2.1'

# General settings for Splunk.
# Group and host settings should be configured in
# group_vars and host_vars respectively
splunk_conf_general_settings:

  - name: Splunk alert_actions.conf
    filename: alert_actions.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'email'
        options:
         - option: 'mailserver'
           value: '{{ cca_splunk_alert_action_smtp }}'


  - name: Splunk authentication.conf
    filename: authentication.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: ''
        options:
         - option: ''
           value: ''


  - name: Splunk authorize.conf
    filename: authorize.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: ''
        options:
         - option: ''
           value: ''


  - name: Splunk deploymentclient.conf
    filename: deploymentclient.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'deployment-client'
        options:
         - option: 'disabled'
           value: 'true'
           comment: >-
             Disable internal deploymentclient configuration as Ansible will take
             precedence of all configuration


  - name: Splunk health.conf
    filename: health.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'alert_action:email'
        options:
         - option: 'disabled'
           value: '0'
         - option: 'action.to'
           value: '{{ cca_splunk_health_alert_action_email_to }}'


  - name: Splunk inputs.conf
    filename: inputs.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'default'
        options:
          - option: 'host'
            value: '{{ inventory_hostname }}'

      - section: 'splunktcp-ssl:{{ s2s_tcp_port_ssl }}'
        comment: >-
          The inputs configuration is handled on a general level as it will only be configured if the
          inputs certificate has been configured on a host.
        options:
          - option: "{{ 'connection_host'
                     if
                        cca_splunk_inputs_ssl | default(false)
                     and
                        configure_inputs_ssl | default(false)
                     else
                        None }}"
            value: "{{ 'none'
                    if
                       cca_splunk_inputs_ssl | default(false)
                     and
                        configure_inputs_ssl | default(false)
                    else
                       None }}"
            state: "{{ 'present'
                    if
                       cca_splunk_inputs_ssl | default(false)
                     and
                        configure_inputs_ssl | default(false)
                    else
                       'absent' }}"

      - section: 'SSL'
        options:
          - option: "{{ 'serverCert'
                     if
                        cca_splunk_inputs_ssl | default(false)
                     and
                        configure_inputs_ssl | default(false)
                     else
                        None }}"
            value: "{{ cca_splunk_certs_home_path }}/{{ cca_splunk_certs_inputs_cert }}"
            state: "{{ 'present'
                    if
                       cca_splunk_inputs_ssl | default(false)
                     and
                        configure_inputs_ssl | default(false)
                    else
                       'absent' }}"
          - option: "{{ 'sslPassword'
                     if
                        cca_splunk_inputs_ssl | default(false)
                     and
                        configure_inputs_ssl | default(false)
                     else
                        None }}"
            value: '{{ cca_splunk_certs_inputs_sslpassword_hash
                       if
                          cca_splunk_cert_enrollment_method != "selfsigned"
                       else
                          cca_splunk_certs_server_default_sslpassword_hash }}'
            state: "{{ 'present'
                    if
                       cca_splunk_inputs_ssl | default(false)
                     and
                        configure_inputs_ssl | default(false)
                    else
                      'absent' }}"

  - name: Splunk limits.conf
    filename: limits.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
     - section: 'storage_passwords_masking'
       options:
        - option: 'view_cleartext_spl_rest'
          value: 'false'
          state: "{{ 'present'
                    if
                      inventory_hostname not in (groups['cluster_peers'] | default([]) + groups['searchhead_members'] | default([]))
                    and (
                        current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.3.2', '>=')
                      or
                        current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.2.4', '>=')
                        and
                        current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.3.0', '<=')
                      or
                        current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.1.7', '>=')
                        and
                        current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.2.0', '<=')
                       )
                    else
                      'absent' }}"
          comment: >-
            Fix for Sensitive Information Disclosure through SPL commands
            Advisory ID: SVD-2024-1204 CVE ID: CVE-2024-53246


  - name: Splunk splunk_monitoring_console_assets.conf
    filename: splunk_monitoring_console_assets.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'settings'
        options:
        - option: 'mc_auto_config'
          value: "enabled"
          state: "{{ 'present'
                    if
                      is_monitoring_console | default(false)
                    else
                      'absent' }}"
          comment: >-
            Configures Monitoring Console in distributed mode


  - name: Splunk outputs.conf
    filename: outputs.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: "tcpout:{{ default_tcpout | default('AbsentSection') }}"
        comment: >-
          Set default_tcpout name per host or group in inventory file
        options:
         - option: 'server'
           value: "{{ groups[ default_tcpout | default('manager') ] | join(':' + s2s_tcp_port_ssl + ',') + ':' + s2s_tcp_port_ssl | default(None)
                   if
                     cca_splunk_outputs_ssl | default(false) and
                     configure_outputs_ssl | default(false) | bool
                   else
                     groups[ default_tcpout | default('manager') ] | join(':' + s2s_tcp_port + ',') + ':' + s2s_tcp_port | default(None) }}"
           state: "{{ 'present'
                   if
                     default_tcpout is defined
                   else
                     'AbsentSection'}}"
         - option: 'sslPassword'
           value: '{{ cca_splunk_certs_outputs_sslpassword_hash
                       if
                          cca_splunk_cert_enrollment_method != "selfsigned"
                       else
                          cca_splunk_certs_server_default_sslpassword_hash
                    }}'
           state: "{{ 'present'
                   if
                     default_tcpout is defined and
                     cca_splunk_outputs_ssl | default(false) and
                     configure_outputs_ssl | default(false) | bool
                   else
                     'absent'}}"

         - option: 'clientCert'
           value: "{{ cca_splunk_certs_home_path }}/{{ cca_splunk_certs_outputs_cert }}"
           state: "{{ 'present'
                   if
                     default_tcpout is defined and
                     cca_splunk_outputs_ssl | default(false) and
                     configure_outputs_ssl | default(false) | bool
                   else
                    'absent'}}"


  - name: Splunk server.conf
    filename: server.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'general'
        options:
          - option: 'serverName'
            value: '{{ inventory_hostname }}'
          - option: 'pass4SymmKey'
            value: '{{ cca_splunk_server_general_pass4SymmKey_hash }}'

      - section: 'sslConfig'
        options:
          - option: 'sslPassword'
            value: '{{ cca_splunk_certs_server_sslpassword_hash
                       if
                          cca_splunk_cert_prefix is defined
                         and
                          cca_splunk_cert_enrollment_method != "selfsigned"
                       else
                          cca_splunk_certs_server_default_sslpassword_hash
                    }}'
          - option: 'serverCert'
            value: "{{ cca_splunk_certs_home_path + '/' +  cca_splunk_certs_server_cert }}"
          - option: 'sslRootCAPath'
            value: "{{ cca_splunk_certs_home_path ~ '/' ~ cca_splunk_extension_cert_rootca }}"
            state: "{{ 'present'
                    if
                       cca_splunk_cert_enrollment_method != 'selfsigned'
                    else
                       'absent' }}"
            comment: >-
              The file specified here must contain the full certificate chain, starting with the Root CA
              certificate, followed by any intermediate certificates in the correct order (from root to leaf).
              The order is critical: Splunk and OpenSSL require the trust chain to be built top-down,
              starting with the Root CA. Incorrect ordering may lead to SSL verification failures or
              Splunk not starting correctly.

      - section: 'config_change_tracker'
        options:
          - option: 'disabled'
            value: 'false'
            state: "{{ 'present'
                    if
                      current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.0.0', '>=')
                    else
                      'absent' }}"
        comment: >-
           Enable config audit as it will assist in management of configuration
           changes

      - section: 'prometheus'
        options:
          - option: 'disabled'
            value: 'true'
            comment: >-
              Disabling non-documented feature to avoid memory leakage in Splunk.
              https://splunk.my.site.com/customer/s/article/Memory-leak-detected-since-upgrading-heavy-forwarders-to-9-4

  - name: Splunk splunk-launch.conf
    filename: splunk-launch.conf
    filepath: '{{ splunk_path }}/etc'
    sections:
      - section:
        options:
         - option: 'SPLUNK_OS_USER'
           value: '{{ splunk_user }}'
         - option: 'SPLUNK_SERVER_NAME'
           value: 'Splunkd'


  - name: Splunk ui-tour.conf
    filename: ui-tour.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'search-tour'
        options:
          - option: 'viewed'
            value: '1'


  - name: Splunk user-prefs.conf
    filename: user-prefs.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'general'
        options:
          - option: 'dismissedInstrumentationOptInVersion'
            value: '4'
          - option: 'hideInstrumentationOptInModal'
            value: '1'
          - option: 'notification_python_3_impact'
            value: 'false'
          - option: 'render_version_messages'
            value: '0'


  - name: Splunk web.conf
    filename: web.conf
    filepath: '{{ splunk_path }}/etc/system/local'
    sections:
      - section: 'settings'
        options:
          - option: 'max_upload_size'
            value: '1024'
          - option: 'enableSplunkWebSSL'
            value: "{{ 'true'
                    if
                      cca_splunk_web_ssl | default(false)
                    and
                      cca_splunk_cert_enrollment_method != 'selfsigned'
                    else
                      'false' }}"
            state: "{{ 'present'
                    if
                       cca_splunk_web_ssl | default(false)
                    else
                      'absent' }}"
          - option: 'serverCert'
            value: "{{ cca_splunk_certs_home_path + '/' + cca_splunk_certs_web_cert }}"
            state: "{{ 'present'
                    if
                      cca_splunk_web_ssl | default(false)
                    and
                      cca_splunk_cert_enrollment_method != 'selfsigned'
                    else
                      'absent' }}"
          - option: 'privKeyPath'
            value: "{{ cca_splunk_certs_home_path + '/' + cca_splunk_certs_web_key }}"
            state: "{{ 'present'
                    if
                      cca_splunk_web_ssl | default(false)
                    and
                      cca_splunk_cert_enrollment_method != 'selfsigned'
                    else
                      'absent' }}"
          - option: 'sslPassword'
            value: "{{ cca_splunk_certs_web_sslpassword_hash }}"
            state: "{{ 'present'
                    if
                      cca_splunk_web_ssl | default(false)
                    and
                      cca_splunk_cert_enrollment_method != 'selfsigned'
                    else
                      'absent' }}"
          - option: 'replyHeader.Referrer-Policy'
            value: "strict-origin-when-cross-origin"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Controls how much referrer information is included with requests.
              "strict-origin-when-cross-origin" helps limit leakage of sensitive URL data.
          - option: 'replyHeader.Access-Control-Allow-Origin'
            value: "https://{{ fqdn | default(inventory_hostname) }}"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Specifies which origin is allowed for cross-origin resource sharing (CORS).
              Update fqdn in your inventory with your specific allowed domain to limit resource access securely.
          - option: 'replyHeader.Cross-Origin-Opener-Policy'
            value: "same-origin"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Prevents your site from opening cross-origin popups without explicit intent.
              "same-origin" enhances protection against cross-origin attacks.
          - option: 'replyHeader.Cross-Origin-Embedder-Policy'
            value: "require-corp"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Restricts embedding cross-origin resources without explicit approval.
              Ensure embedded resources explicitly allow embedding via CORP header to avoid loading issues.
          - option: 'replyHeader.Cross-Origin-Resource-Policy'
            value: "same-site"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Limits resources to be loaded only from the same site.
              Carefully verify your external resources as this can block legitimate cross-site resource loading.
          - option: 'replyHeader.X-Permitted-Cross-Domain-Policies'
            value: "none"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Prevents Adobe Flash and Acrobat from loading cross-domain policy files.
              "none" strongly restricts cross-domain interactions and improves security.
          - option: 'replyHeader.Content-Security-Policy'
            value: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'; frame-src 'self'; object-src 'none';"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Defines a strict Content Security Policy (CSP) restricting resource types and origins.
              Adjust this policy carefully as overly restrictive settings can break website functionalities.
          - option: 'sendStrictTransportSecurityHeader'
            value: "true"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Enables HTTP Strict Transport Security (HSTS), enforcing browser communication over HTTPS only.
              Ensure valid and trusted SSL certificates are configured properly before enabling.
          - option: 'includeSubDomains'
            value: "true"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Extends HSTS policy to include all subdomains.
              Ensure all subdomains can support HTTPS before activating to avoid downtime or certificate errors.
          - option: 'preload'
            value: "true"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Indicates intent to have domain preloaded into browser HSTS lists.
              Be cautious: removing domains from preload lists later can be difficult and time-consuming.
          - option: 'x_frame_options_sameorigin'
            value: "false"
            state: "{{ 'present' if enable_web_security_headers | default(false) else 'absent' }}"
            comment: >-
              Controls whether your site may be embedded in iframes from same origin.
              Setting to "false" could allow embedding from different origins; review carefully based on your embedding needs.
