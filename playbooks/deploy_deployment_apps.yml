# Playbook to deploy deployment-apps to splunk instances
# Initial
#
# REPO_TYPE=onboarding
# MENU_DESC=Deploy deployment-apps to Deployment Servers
# EXTRA_VARS=hide_password(true) accept_deployment_app_removal(false) reload_serverclass("all") skip_ds_reload_handler(false)

- name: Initialize playbook run on manager server - Deploy Deployment Apps
  hosts: manager
  connection: local
  strategy: linear
  any_errors_fatal: true
  pre_tasks:
    - name: Initialize deploy deployment-apps on manager
      ansible.builtin.include_role:
        name: cca.core.control
        tasks_from:
          initialize.yml
      vars:
        target: "deploy_deployment-apps"

# Deploy deployment-apps to Splunk servers
- name: Deploy deployment-apps to Splunk servers
  hosts: deployment_servers
  become: true
  become_method: ansible.builtin.sudo
  become_user: "{{ splunk_user }}"
  serial: "{{ serial_deployment | default(omit) }}"
  gather_facts: false
  any_errors_fatal: true

  pre_tasks:
    - name: Include tasks to wait for connection to host
      ansible.builtin.include_role:
        name: cca.core.splunk
        tasks_from:
          wait_for_connection.yml

    - name: Gather network facts
      ansible.builtin.setup:
        gather_subset: 'network'

    - name: Pre deployment tasks
      ansible.builtin.include_role:
        name: cca.core.control
        tasks_from:
          pre_deployment_tasks.yml

    # Serverclass specific tasks
    # Not used in standard deployments
    - name: Get serverclass state
      ansible.builtin.include_role:
        name: cca.core.splunk
        tasks_from:
          deployment_server/get_serverclass_state.yml
      when: use_serverclass_mode | default(false)

    - name: Stage deployment apps
      ansible.builtin.include_role:
        name: cca.splunk.onboarding
        tasks_from:
          stage_deployment_apps.yml
      when: use_serverclass_mode | default(false)

    - name: Dry run deployment apps towards target
      ansible.builtin.include_role:
        name: cca.splunk.onboarding
        tasks_from:
          dry_run_deployment_apps.yml
      when: use_serverclass_mode | default(false)

    - name: Map deployment apps updates to serverclass data
      ansible.builtin.include_role:
        name: cca.core.splunk
        tasks_from:
          deployment_server/get_serverclass_map_of_deployment_apps.yml
      when: use_serverclass_mode | default(false)

  tasks:
    # Serverclass app deployment
    - name: Include role for serverclass app deployment
      ansible.builtin.include_role:
        name: cca.splunk.onboarding
        tasks_from:
          deployment_server/deploy_serverclass_apps.yml
      when: use_serverclass_mode | default(false)

    - name: Include onboarding role for deployment-apps
      ansible.builtin.include_role:
        name: cca.splunk.onboarding
      vars:
        deploy_scope: "deployment-apps"

    - name: Include onboarding role for apps to deployment server
      ansible.builtin.include_role:
        name: cca.splunk.onboarding
      vars:
        deploy_scope: "apps"

  post_tasks:
    - name: Reload deployment server
      ansible.builtin.include_role:
        name: cca.core.splunk
        tasks_from:
          reload_deployment_server.yml

    - name: Include post deployment tasks
      ansible.builtin.include_role:
        name: cca.core.control
        tasks_from:
          post_deployment_tasks.yml

# Finalize playbook run on manager server
- name: Finalize playbook run on manager server
  hosts: manager
  connection: local
  strategy: linear
  pre_tasks:
    - name: Finalize deploy deployment-apps on manager
      ansible.builtin.include_role:
        name: cca.core.control
        tasks_from:
          finalize.yml
      vars:
        target: "deploy_deployment-apps"
