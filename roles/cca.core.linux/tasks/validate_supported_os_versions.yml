---
# tasks file for cca.core.linux
#
# Description:
#   Validates that the managed host is running on a tested and supported
#   OS version.
#   There are breaking changes between in EL9 that is used by RHEL 9, Rocky 9,
#   CentOS 9 and Amazon 2023. Host versions need to be grouped with correct
#   cca_splunk_systemd_template_version and package_manager values.
#
# Prerequisite:
#   Gather at least network facts from the target host
#
# Author: Roger Lindquist (github.com/rlinq)
#
# Release: 2025.2.1
#

- name: Set package manager compatibility flags
  ansible.builtin.set_fact:
    use_shell_fallback: "{{ ansible_distribution_major_version == '8' and ansible_distribution in ['RedHat', 'CentOS', 'Rocky', 'OracleLinux'] }}"

- name: List of supported RedHat versions
  ansible.builtin.set_fact:
    redhat_support: true
    package_manager: 'yum'
  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version in ["8", "9"]
    - ansible_architecture == "x86_64"

- name: List of supported RedHat versions
  ansible.builtin.set_fact:
    redhat_support: true
    package_manager: 'dnf'
  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version in ["8", "9"]
    - ansible_architecture == "x86_64"

- name: List of supported CentOS versions
  ansible.builtin.set_fact:
    centos_support: true
    package_manager: 'yum'
  when:
    - ansible_distribution == "CentOS"
    - ansible_distribution_major_version in ["8", "9"]
    - ansible_architecture == "x86_64"

- name: List of supported Rocky Linux versions
  ansible.builtin.set_fact:
    rocky_support: true
    package_manager: 'dnf'
  when:
    - ansible_distribution == "Rocky"
    - ansible_distribution_major_version in ["8", "9"]
    - ansible_architecture == "x86_64"

- name: List of supported Oracle Linux versions
  ansible.builtin.set_fact:
    oracle_support: true
    package_manager: 'dnf'
  when:
    - ansible_distribution == "OracleLinux"
    - ansible_distribution_major_version in ["8", "9"]
    - ansible_architecture == "x86_64"

- name: List of supported Amazon Linux 2023+ versions
  ansible.builtin.set_fact:
    amazon_al2023_support: true
    package_manager: 'dnf'
  when:
    - ansible_distribution == "Amazon"
    - ansible_distribution_major_version == "2023"
    - ansible_architecture == "x86_64"

- name: List of supported Debian versions
  ansible.builtin.set_fact:
    debian_support: true
    package_manager: 'apt'
  when:
    - ansible_distribution == "Debian"
    - ansible_distribution_major_version == "12"
    - ansible_architecture == "x86_64"

- name: List of supported Ubuntu versions
  ansible.builtin.set_fact:
    ubuntu_support: true
    package_manager: 'apt'
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version in ["22", "24"]
    - ansible_architecture == "x86_64"

- name: Assert that only supported OS Versions are found
  ansible.builtin.assert:
    that:
      - redhat_support is defined or
        centos_support is defined or
        rocky_support is defined or
        oracle_support is defined or
        amazon_al2023_support is defined or
        debian_support is defined or
        ubuntu_support is defined
    fail_msg: >-
        This Ansible framework has not been against the following OS/Version combination:
          ansible_distribution = {{ ansible_distribution }}
          ansible_distribution_major_version = {{ ansible_distribution_major_version }}
          ansible_architecture = {{ ansible_architecture }}"

- name: Flag OS as deprecated if EL < 9
  ansible.builtin.set_fact:
    cca_os_deprecated: true
  when:
    - ansible_distribution in ["RedHat", "CentOS", "Rocky", "OracleLinux"]
    - ansible_distribution_major_version is version('9', '<')

- name: Fail if deprecated OS is detected but not explicitly accepted
  ansible.builtin.assert:
    that:
      - cca_accept_deprecated_os | default(false) | bool
    fail_msg: >-
      This host is running a deprecated OS version (EL{{ ansible_distribution_major_version }}) for {{ ansible_distribution }}.
      Future releases of this framework may introduce breaking changes or remove support.
      If you understand and accept the risks, set 'cca_accept_deprecated_os: true' in your inventory or extra-vars to continue.
  when: cca_os_deprecated is defined
