---
# tasks file for cca.common.setup-wizard
#
# Description:
#
# Prerequisite:
#
# Author: AndrÃ© Enemark
#         Roger Lindquist
#
# Release: 2023.1.1

- name: Set fact for current_item
  ansible.builtin.set_fact:
    current_item:
      key: "{{ item.key }}"
      value: "{{ item.value }}"
  with_dict:
    - "{{ secret_type }}"

- name: Generate a random password for pass4SymmKey
  ansible.builtin.set_fact:
    random_pass4SymmKey: "{{ lookup('community.general.random_string', base64=true, length=48) }}"
  tags:
    - skip_ansible_lint

- name: Set fact for tmp_key
  ansible.builtin.set_fact:
    tmp_key: "{{ current_item.key }}_{{ current_item.value }}"

- name: Set fact for tmp_password
  ansible.builtin.set_fact:
    tmp_password: "{{ vars_current_wizard[tmp_key] | default(random_pass4SymmKey) if use_existing_cca_splunk_secret == true else random_pass4SymmKey }}"

- name: Encrypt the password
  ansible.builtin.command:
    cmd: "python3 {{ role_path }}/../cca.core.splunk/files/bin/splunk_secret_helper.py --splunk-secret {{ splunk_secret }} --cleartext '{{ tmp_password }}'"
  register: encrypted_random_secret
  tags:
    - skip_ansible_lint

- name: Vault the secret password
  ansible.builtin.set_fact:
    vaulted_secret_value: >-
      {{ tmp_password | vault(lookup('ansible.builtin.file', ansible_env.ANSIBLE_VAULT_PASSWORD_FILE))
      | split() | join('\r\n')
      | regex_replace('1.2;AES256;filter_default', '1.1;AES256') }}

- name: Save the clear text secret as an ansible vault
  ansible.builtin.lineinfile:
    path: "{{ vars.cca_splunk_secret_file }}"
    line: '{{ current_item.key }}_{{ current_item.value }}: !vault "{{ vaulted_secret_value }}"'
    regex: '^{{ current_item.key }}_{{ current_item.value }}:'

- name: Save the hashed secret to the file
  ansible.builtin.lineinfile:
    path: "{{ vars.cca_splunk_secret_file }}"
    line: "{{ current_item.key }}_{{ current_item.value }}_hash: '{{ encrypted_random_secret.stdout }}'"
    regex: '^{{ current_item.key }}_{{ current_item.value }}_hash:'
