---
# tasks file for cca.common.setup-wizard
#
# Description:
#
# Prerequisite:
#
# Author: AndrÃ© Enemark
#         Roger Lindquist
#
# Release: 2023.1.1


- name: Set fact for tmp_admin
  ansible.builtin.set_fact:
    tmp_admin: 'admin'

- name: "Username for administrator in: {{ environment_dir }} "
  ansible.builtin.pause:
    prompt: "Press enter for a administrator login. ({{ tmp_admin }})"
  register: splunk_admin_username

- name: Generate a random password for admin user
  ansible.builtin.set_fact:
    random_admin_password: "{{ lookup('community.general.random_string', base64=True, length=48) }}"

- name: Set fact for tmp_password
  ansible.builtin.set_fact:
    tmp_password: "{{ random_admin_password }}"

- name: Password for admin user
  ansible.builtin.pause:
    prompt: "Press enter for the selected password or enter a 8 character minimum password ({{ tmp_password }})"
  register: master

- name: Store admin password
  ansible.builtin.set_fact:
    user_password: '{{ tmp_password if master.user_input | length == 0 else master.user_input }}'
  no_log: true

- name: Hash the admin password
  ansible.builtin.shell:
    cmd: "echo '{{ user_password }}' | pcrypt -r 700000"
  register: tmp_password_hash
  no_log: true
  tags:
    - skip_ansible_lint

- name: Set fact for user_info
  ansible.builtin.set_fact:
    user_info:
      username: "{{ tmp_admin if splunk_admin_username.user_input | length == 0 else splunk_admin_username.user_input }}"
      password: "{{ user_password }}"
      password_hash: "{{ tmp_password_hash.stdout }}"
  no_log: true

- name: Vault the admin password
  ansible.builtin.set_fact:
    vaulted_secret_value: >-
      {{ user_info.password | vault(lookup('ansible.builtin.file', ansible_env.ANSIBLE_VAULT_PASSWORD_FILE))
      | split() | join('\r\n')
      | regex_replace('1.2;AES256;filter_default', '1.1;AES256') }}

- name: Save cli username to vars file in infrastructure and onboarding repo
  ansible.builtin.lineinfile:
    path: "{{ item }}"
    line: "cca_splunk_admin_user: '{{ user_info.username }}'"
    regex: '^cca_splunk_admin_user:'''
  loop:
    - "{{ cca_environment.infrastructure_repo_dir }}/environments/{{ environment_dir }}/group_vars/all/cca_splunk_secrets"
    - "{{ cca_environment.onboarding_repo_dir }}/environments/{{ environment_dir }}/group_vars/all/cca_splunk_secrets"

- name: Save the clear text secret as an ansible vault in infrastructure and onboarding repo
  ansible.builtin.lineinfile:
    path: "{{ item }}"
    line: 'cca_splunk_admin_password: !vault "{{ vaulted_secret_value }}"'
    regex: '^cca_splunk_admin_password:'
  loop:
    - "{{ cca_environment.infrastructure_repo_dir }}/environments/{{ environment_dir }}/group_vars/all/cca_splunk_secrets"
    - "{{ cca_environment.onboarding_repo_dir }}/environments/{{ environment_dir }}/group_vars/all/cca_splunk_secrets"

- name: Save the hashed secret to the file
  ansible.builtin.lineinfile:
    path: "{{ cca_splunk_secret_file }}"
    line: "cca_splunk_admin_password_hash: '{{ user_info.password_hash }}'"
    regex: '^cca_splunk_admin_password_hash:'
