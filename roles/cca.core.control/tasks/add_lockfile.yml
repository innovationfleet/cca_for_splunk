---
# tasks file for cca.core.control
#
# Description:
#
# Prerequisite:
#
# Author: Roger Lindquist (github.com/rlinq)
#
# Release: 2022.3.1

- name: Calculate number of retries based on seconds to wait
  ansible.builtin.set_fact:
    cca_data_onboarding_lock_retries: "{{ cca_data_onboarding_lock_wait_sec | default(1800) / cca_data_onboarding_lock_retry_delay | default(15) | int }}"
    cca_infrastructure_lock_retries: "{{ cca_infrastructure_lock_wait_sec | default(1800) / cca_infrastructure_lock_retry_delay | default(15) | int }}"

- name: Check if a look file exists for cca infrastructure
  ansible.builtin.stat:
    path: "/tmp/.cca_infrastructure_lock-{{ environment_name }}"
  register: stat_dot_infrastructure_lock

- name: Get runid from infrastructure lock file
  ansible.builtin.set_fact:
    runid_in_lockfile: "{{ lookup('file', '/tmp/.cca_infrastructure_lock-' + environment_name) }}"
  when:
    - stat_dot_infrastructure_lock.stat.exists
    - cca_runid is defined

- name: Check if our runid is in the lock file
  ansible.builtin.set_fact:
    my_runid: true
  when:
    - cca_runid is defined
    - stat_dot_infrastructure_lock.stat.exists | default(false) or
      stat_dot_data_onboarding_lock.stat.exists | default(false)
    - cca_runid == runid_in_lockfile

- name: Wait for data onboarding lock file to be deleted by other process. If unexpected then delete /tmp/.cca_data_onboarding_lock-ENV_NAME
  ansible.builtin.stat:
    path: "/tmp/.cca_data_onboarding_lock-{{ environment_name }}"
  register: stat_dot_data_onboarding_lock
  until: not stat_dot_data_onboarding_lock.stat.exists
  retries: "{{ cca_data_onboarding_lock_retries | default(120) | int }}"
  delay: "{{ cca_data_onboarding_lock_retry_delay | default(15) | int }}"
  when:
    - not my_runid | default(false)
    - parallel_execution_control | default(false)
    - target is defined
    - target == "deploy_apps" or
      target == "deploy_deployment-apps" or
      target == "deploy_manager-apps" or
      target == "deploy_shcluster_apps"

- name: Create lock file to manage multi user execution
  ansible.builtin.copy:
    dest: "/tmp/.cca_data_onboarding_lock-{{ environment_name }}"
    content: |
      {{ cca_runid | default('20380119') }}
    mode: '0644'
  when:
    - not my_runid | default(false)
    - parallel_execution_control | default(false)
    - target is defined
    - target == "deploy_apps" or
      target == "deploy_deployment-apps" or
      target == "deploy_manager-apps" or
      target == "deploy_shcluster_apps"
  tags:
    - skip_ansible_lint

- name: Wait for data infrastructure lock file to be deleted by other process. If unexpected then delete /tmp/.cca_infrastructure_lock-ENV_NAME
  ansible.builtin.stat:
    path: "/tmp/.cca_infrastructure_lock-{{ environment_name }}"
  register: stat_dot_infrastructure_lock
  until: not stat_dot_infrastructure_lock.stat.exists
  retries: "{{ cca_infrastructure_lock_retries | default(120) | int }}"
  delay: "{{ cca_infrastructure_lock_retry_delay | default(15) | int }}"
  when:
    - not my_runid | default(false)
    - parallel_execution_control | default(false)
    - target is defined
    - target == "all_in_one_servers" or
      target == "cluster_managers-cluster_peers" or
      target == "data_collection_nodes" or
      target == "deployment_servers" or
      target == "forwarders" or
      target == "hybrid_searchheads" or
      target == "license_managers" or
      target == "searchhead_deployers-searchhead_members"

- name: Create lock file to manage multi user execution
  ansible.builtin.copy:
    dest: "/tmp/.cca_infrastructure_lock-{{ environment_name }}"
    content: |
      {{ cca_runid | default('20380119') }}
    mode: '0644'
  when:
    - not my_runid | default(false)
    - parallel_execution_control | default(false)
    - target is defined
    - target == "all_in_one_servers" or
      target == "cluster_managers-cluster_peers" or
      target == "data_collection_nodes" or
      target == "deployment_servers" or
      target == "forwarders" or
      target == "hybrid_searchheads" or
      target == "license_managers" or
      target == "searchhead_deployers-searchhead_members"
  tags:
    - skip_ansible_lint
