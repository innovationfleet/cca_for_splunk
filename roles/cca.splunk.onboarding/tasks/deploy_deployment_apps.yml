---
# tasks file for cca.splunk.onboarding
#
# Description:
#
# Prerequisite:
#
# Author: Roger Lindquist (github.com/rlinq)
#
# Release: 2024.2.1

- name: Extract deleted apps from rsync output during dry run
  ansible.builtin.set_fact:
    deleted_deployment_apps: "{{ deployment_apps_update_status.stdout_lines | default('') | list | extract_deleted_apps }}"
  no_log: "{{ hide_password }}"

- name: Assert that no unexpected directories will be deleted on the deployment server
  ansible.builtin.assert:
    that:
      - deleted_deployment_apps | length == 0
    fail_msg: >-
      An app directory deletion is detected on the deployment Servers. This is not allowed by
      default. Following apps will be removed: {{ deleted_deployment_apps | join(', ') }}.
      If you expect these directories to be deleted, set accept_deployment_app_removal
      to true in the extra_vars CCA dialogue.
    success_msg: 'No critical app directories will be deleted on the deployment server'
  when:
    - not accept_deployment_app_removal | default(false)

- name: Deploy the apps from the staging directory to the deployment server
  become: false
  ansible.posix.synchronize:
    src: '{{ deployment_server_apps_staging_dir }}/deployment_server/'
    dest: '{{ splunk_path }}/etc/deployment-apps/'
    copy_links: true
    recursive: true
    checksum: true
    times: false
    delete: true
    owner: false
    group: false
    archive: false
    use_ssh_args: "{{ synchronize_module_use_ssh_args | default(false) }}"
    rsync_path: '{% if splunk_user == ansible_ssh_user %}rsync{% else %}sudo -u {{ splunk_user }} rsync{% endif %}'
    rsync_opts: '{{ deployment_apps_rsync_opts + item.rsync_opts if item.rsync_opts is defined else deployment_apps_rsync_opts }}'
  register: deploy_deployment_apps_status
  changed_when: >
    deploy_deployment_apps_status.stdout_lines | length > 0 and
    (
      not '.d...p..... ./' in  deploy_deployment_apps_status.stdout_lines | default([]) or
      deploy_deployment_apps_status.stdout_lines | default([]) | length > 0
    )
  notify: notify deployment server reload

- name: Cleanup manager server after staging apps are completed
  become: false
  connection: local
  ansible.builtin.file:
    path: '{{ deployment_server_apps_staging_dir }}'
    state: absent
  delegate_to: localhost
  when:
    - cluster_label is defined
    - cleanup_staging_apps | default(true)
  changed_when: false
  check_mode: false
