---
# tasks file for cca.splunk.onboarding
#
# Description:
#
# Prerequisite:
#
# Author: Roger Lindquist (github.com/rlinq)
#
# Release: 2025.2.1

- name: Set staging directory
  ansible.builtin.set_fact:
    deployment_server_apps_staging_dir: >-
     {{ (cca_local_tmp_dir
        | default("/tmp")) }}/{{ cca_runid }}/{{ environment_name }}/{{ inventory_hostname }}/{{ environment_name }}
    selected_apps_source_dir: >-
      {{
        selected_deployment_apps_absolute_sourcedir
        | default(absolute_file_store_path + '/etc/' + selected_deployment_apps_sourcedir)
      }}
- name: Cleanup manager before staging appsÂ§
  become: false
  connection: local
  ansible.builtin.file:
    path: '{{ deployment_server_apps_staging_dir }}'
    state: absent
  delegate_to: localhost
  changed_when: false
  check_mode: false

- name: Ensure directory exists for staging apps
  become: false
  delegate_to: localhost
  connection: local
  ansible.builtin.file:
    path: "{{ deployment_server_apps_staging_dir }}/deployment_server/"
    state: directory
    mode: '0700'
  changed_when: false
  check_mode: false

- name: Check existence of deployment apps directory for this environment
  become: false
  connection: local
  ansible.builtin.stat:
    path: "{{ deployment_apps_absolute_sourcedir | default(absolute_file_store_path + '/etc/' + deployment_apps_sourcedir) }}"
  register: stat_environment_specific_path
  delegate_to: localhost
  check_mode: false

- name: Assert that the required deployment_apps directory exists
  ansible.builtin.assert:
    that:
      - stat_environment_specific_path.stat.exists
    fail_msg: >-
      The directory {{ deployment_apps_absolute_sourcedir | default(absolute_file_store_path + '/etc/' + deployment_apps_sourcedir) }} is missing
      correct and rerun the playbook.

- name: Stage manager with deployment apps from environment directory
  become: false
  connection: local
  ansible.builtin.command: >
    rsync --delay-updates -F --compress --archive
    "{{ deployment_apps_absolute_sourcedir | default(absolute_file_store_path + '/etc/' + deployment_apps_sourcedir) }}/"
    "{{ deployment_server_apps_staging_dir }}/deployment_server/"
  delegate_to: localhost
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Stage manager with deployment server selected apps
  become: false
  connection: local
  ansible.builtin.command: >
    rsync --delay-updates -F --compress --archive
    "{{ selected_apps_source_dir }}/{{ item.source_app }}/"
    "{{ deployment_server_apps_staging_dir }}/deployment_server/{{ item.name }}/"
  delegate_to: localhost
  when:
    - selected_deployment_apps_sourcedir is defined
    - item.state is defined
    - item.state != 'absent'
  loop: '{{ selected_deployment_apps | default([]) if selected_deployment_apps | default([]) is iterable else [] }}'
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Stage manager with versioned apps
  become: false
  connection: local
  ansible.builtin.command: >
    rsync --delay-updates -F --compress --archive
    "{{ versioned_apps_source_path if item.source_path is not defined else item.source_path }}/{{ item.source_app }}/"
    "{{ deployment_server_apps_staging_dir }}/deployment_server/{{ item.name }}/"
  delegate_to: localhost
  when:
    - versioned_apps_sourcedir is defined
    - item.dest_dir is defined
    - item.dest_dir == 'deployment-apps'
    - item.state is defined
    - item.state != 'absent'
  loop: '{{ versioned_apps | default([]) if versioned_apps | default([]) is iterable else [] }}'
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Stage manager with selected apps
  become: false
  connection: local
  ansible.builtin.command: >
    rsync --delay-updates -F --compress --archive
    "{{ (item.source_path | default(selected_apps_source_path)) ~ ('/' ~ item.source_app if item.source_app is defined else '') }}/"
    "{{ deployment_server_apps_staging_dir }}/deployment_server/{{ item.name }}/"
  delegate_to: localhost
  when:
    - item.dest_dir is defined
    - item.dest_dir == 'deployment-apps'
    - item.state is defined
    - item.state != 'absent'
  loop: '{{ selected_apps | default([]) if selected_apps | default([]) is iterable else [] }}'
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Include and run tasks from custom onboarding roles
  ansible.builtin.include_role:
    name: '{{ external_onboarding_role }}'
  loop_control:
    loop_var: external_onboarding_role
  loop: '{{ external_onboarding_deploymentapps_roles | default([]) if external_onboarding_deploymentapps_roles | default([]) is iterable else [] }}'
