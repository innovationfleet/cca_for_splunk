---
# tasks file for cca.core.splunk
#
# Description:
#
# Prerequisite:
#
# Author: Roger Lindquist (github.com/rlinq)
#
# Release: 2025.2.1

- name: Include tasks to login to splunk cli
  ansible.builtin.include_tasks:
    splunk_login.yml

- name: Get running Splunk versions from SH Cluster
  ansible.builtin.shell:
    cmd: >
      set -o pipefail && timeout {{ cca_splunk_command_timeout | default('60') }} {{ splunk_path }}/bin/splunk show shcluster-status --verbose
      | grep 'splunk_version :'
      | awk '{ print $3 }' | sort -u
  args:
    executable: /bin/bash
  register: shcluster_splunk_version
  retries: "{{ cca_splunkd_cli_shcluster_version_retries | default(10) | int }}"
  delay: 10
  until: shcluster_splunk_version.rc == 0
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Store splunk current_splunk_enterprise_version
  ansible.builtin.set_fact:
    current_splunk_enterprise_version: "{{ shcluster_splunk_version.stdout }}"

- name: Create directory for splunk version file if it doesn't exist
  ansible.builtin.file:
    path: "{{ splunk_version_file | default(splunk_path ~ '/.cca/splunk_version') | dirname }}"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_user_group_name }}"
    state: directory
    mode: '0755'

- name: Store Splunk version
  ansible.builtin.copy:
    content: "{{ current_splunk_enterprise_version }}"
    dest: "{{ splunk_version_file | default(splunk_path ~ '/.cca/splunk_version') }}"
    owner: "{{ splunk_user }}"
    group: "{{ splunk_user_group_name }}"
    mode: '0644'

- name: Get info of kvstore engine
  ansible.builtin.shell:
    cmd: >
      set -o pipefail && timeout {{ cca_splunk_command_timeout | default('60') }} {{ splunk_path }}/bin/splunk show kvstore-status
      | grep 'storageEngine :'
      | awk '{ print $3 }'
  args:
    executable: /bin/bash
  register: kvstore_engine
  retries: "{{ cca_splunkd_cli_kvstore_engine_retries | default(10) | int }}"
  delay: 10
  until: kvstore_engine.rc == 0
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Collect full Search Head Cluster status
  ansible.builtin.command:
    cmd: "timeout 180 {{ splunk_path }}/bin/splunk show shcluster-status --verbose"
  register: verbose_shcluster_status
  retries: "{{ cca_splunkd_cli_shcluster_status_retries | default(10) | int }}"
  delay: 10
  until: verbose_shcluster_status.rc == 0
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Collect Captain information from Search Head Cluster status
  ansible.builtin.shell:
    cmd: >
      set -o pipefail && timeout {{ cca_splunk_command_timeout | default('60') }} {{ splunk_path }}/bin/splunk show shcluster-status
      | head -9
      | grep "label"
      | awk -F"label : " "{ print $2 }"
  args:
    executable: /bin/bash
  register: shcluster_captain
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Collect kvstore status
  ansible.builtin.command:
    cmd: "timeout {{ cca_splunk_command_timeout | default('60') }} {{ splunk_path }}/bin/splunk show kvstore-status"
  register: shcluster_kvstore_status
  retries: "{{ cca_splunkd_cli_kvstore_status_retries | default(10) | int }}"
  delay: 10
  until: shcluster_kvstore_status.rc == 0
  changed_when: false
  check_mode: false
  tags:
    - skip_ansible_lint

- name: Set fact for kvstore status
  ansible.builtin.set_fact:
    shcluster_kvstore_status_flag: true
  when:
    - "'status : ready' in shcluster_kvstore_status.stdout"

- name: Set fact for dynamic captain
  ansible.builtin.set_fact:
    shcluster_dynamic_captain_flag: true
  when:
    - "'dynamic_captain : 1' in verbose_shcluster_status.stdout"

- name: Set fact for initialized status
  ansible.builtin.set_fact:
    shcluster_initialized_flag: true
  when:
    - "'initialized_flag : 1' in verbose_shcluster_status.stdout"

- name: Set fact for rolling restart status
  ansible.builtin.set_fact:
    shcluster_rolling_restart_flag: false
  when:
    - "'rolling_restart_flag : 0' in verbose_shcluster_status.stdout"

- name: Set fact for rolling upgrade status
  ansible.builtin.set_fact:
    shcluster_rolling_upgrade_flag: false
  when:
    - "'rolling_upgrade_flag : 0' in verbose_shcluster_status.stdout"

- name: Set fact for service ready status
  ansible.builtin.set_fact:
    shcluster_service_ready_flag: true
  when:
    - "'service_ready_flag : 1' in verbose_shcluster_status.stdout"

- name: Set fact for captain status
  ansible.builtin.set_fact:
    shcluster_stable_captain_flag: true
  when:
    - "'stable_captain : 1' in verbose_shcluster_status.stdout"

- name: Set fact for manual detention status
  ansible.builtin.set_fact:
    shcluster_manual_detention_flag: false
  when:
    - "'manual_detention : off' in verbose_shcluster_status.stdout"

- name: Set fact of current captain
  ansible.builtin.set_fact:
    current_shcluster_captain: "{{ shcluster_captain.stdout }}"

- name: Store file on search head cluster captain
  ansible.builtin.file:
    path: "{{ searchhead_captain }}"
    state: touch
    mode: '664'
  when:
    - current_shcluster_captain == inventory_hostname
  changed_when: false

- name: Include task to get certificate status
  ansible.builtin.include_tasks:
    get_certificate_status.yml
