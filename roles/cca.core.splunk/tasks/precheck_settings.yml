---
# tasks file for cca.core.splunk
#
# Description: This tasks reads all splunk_conf_*_settings runs a
#              pre validation of them to check that they don't have
#              any unexpected or invalid values.
#
# Prerequisite:
#              splunk_conf_*_settings needs to be defined.
#
# Author: Roger Lindquist (github.com/rlinq)
#
# Release: 2025.2.1

- name: Assert that default_tcpout valid group name when defined
  ansible.builtin.assert:
    that:
      default_tcpout in groups
    fail_msg: >-
      The hosts inventory file needs to have a proper group_name
      referenced in the default_tcpout variable. Current value are

      default_tcpout={{ default_tcpout }}
  when:
    - default_tcpout is defined

- name: Ensure general settings are in the expected format
  ansible.builtin.set_fact:
    splunk_conf_general_settings_flattened: "{{ splunk_conf_general_settings | default([]) | splunk_conf_flatten }}"
  when:
    - splunk_conf_general_settings_flattened is not defined
  no_log: "{{ hide_password }}"

- name: Ensure group settings are in the expected format
  ansible.builtin.set_fact:
    splunk_conf_group_settings_flattened: "{{ splunk_conf_group_settings | default([]) | splunk_conf_flatten }}"
  when:
    - splunk_conf_group_settings_flattened is not defined
  no_log: "{{ hide_password }}"

- name: Ensure host settings are in the expected format
  ansible.builtin.set_fact:
    splunk_conf_host_settings_flattened: "{{ splunk_conf_host_settings | default([]) | splunk_conf_flatten }}"
  when:
    - splunk_conf_host_settings_flattened is not defined
  no_log: "{{ hide_password }}"

- name: Validate Splunk general configuration settings
  ansible.builtin.assert:
    that:
      - "not item.path is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.section is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.option is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.value is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - not (item.option is regex('^(?!#).*')
        and item.value != ''
        and item.option == ''
        and item.state | default('present') != 'absent')
        or not enable_precheck | default(true)
    msg: |
      Validation failed for the following item:
      Path: {{ item.path }}
      Section: {{ item.section }}
      Option: {{ item.option }}
      Value: {{ item.value }}
      This item does not meet the required criteria.
  loop: "{{ splunk_conf_general_settings_flattened | default([]) }}"
  when: splunk_conf_general_settings_flattened is defined and general_settings_validation_enabled | default(true)
  loop_control:
    label: "{{ item.section }} - {{ item.option }}"
  no_log: "{{ hide_password | default(true) }}"

- name: Validate Splunk group configuration settings
  ansible.builtin.assert:
    that:
      - "not item.path is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.section is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.option is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.value is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - not (item.option is regex('^(?!#).*')
        and item.value != ''
        and item.option == ''
        and item.state | default('present') != 'absent')
        or not enable_precheck | default(true)
    msg: |
      Validation failed for the following item:
      Path: {{ item.path }}
      Section: {{ item.section }}
      Option: {{ item.option }}
      Value: {{ item.value }}
      This item does not meet the required criteria.
  loop: "{{ splunk_conf_group_settings_flattened | default([]) }}"
  when: splunk_conf_group_settings_flattened is defined and group_settings_validation_enabled | default(true)
  loop_control:
    label: "{{ item.section }} - {{ item.option }}"
  no_log: "{{ hide_password | default(true) }}"

- name: Validate Splunk host configuration settings
  ansible.builtin.assert:
    that:
      - "not item.path is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.section is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.option is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - "not item.value is regex(invalid_config_regex) or item.state | default('present') == 'absent'"
      - not (item.option is regex('^(?!#).*')
        and item.value != ''
        and item.option == ''
        and item.state | default('present') != 'absent')
        or not enable_precheck | default(true)
    msg: |
      Validation failed for the following item:
      Path: {{ item.path }}
      Section: {{ item.section }}
      Option: {{ item.option }}
      Value: {{ item.value }}
      This item does not meet the required criteria.
  loop: "{{ splunk_conf_host_settings_flattened | default([]) }}"
  when: splunk_conf_host_settings_flattened is defined and host_settings_validation_enabled | default(true)
  loop_control:
    label: "{{ item.section }} - {{ item.option }}"
  no_log: "{{ hide_password | default(true) }}"
