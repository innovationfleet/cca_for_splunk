---
# tasks file for cca.core.splunk
#
# Description:
#
# Prerequisite:
#
# Author: Roger Lindquist (github.com/rlinq)
#
# Release: 2025.3.1.2


- name: Set fact for ds inventory name
  ansible.builtin.set_fact:
    ds_inventory_hostname: "{{ inventory_hostname }}"
  delegate_to: localhost
  delegate_facts: true

- name: Set fact for local and remote dir
  ansible.builtin.set_fact:
    remote_directory: "{{ splunk_path }}/etc/apps"
    local_directory: >
      {{ deployment_servers_apps_sourcedir | default(absolute_onboarding_repo_path + '/splunk/etc/apps/deployment_servers/' + environment_name) }}

- name: Ensure the bin directory exists on the remote host
  ansible.builtin.file:
    path: "{{ (cca_remote_tmp_dir | default('/tmp')) }}/bin"
    state: directory
    mode: '0755'
  changed_when: false
  check_mode: false

- name: Ensure unique directories exist on localhost
  delegate_to: localhost
  connection: local
  become: false
  ansible.builtin.file:
    path: "{{ (cca_local_tmp_dir | default('/tmp/cca_tmp')) }}/{{ cca_runid }}/{{ environment_name }}/{{ hostvars['localhost']['ds_inventory_hostname'] }}"
    state: directory
    mode: '0755'
  changed_when: false
  check_mode: false

- name: Copy sc_parser.py to remote host
  ansible.builtin.copy:
    src: "{{ role_path }}/files/bin/sc_parser.py"
    dest: "{{ (cca_remote_tmp_dir | default('/tmp')) }}/bin/sc_parser.py"
    mode: '0755'
  changed_when: false
  check_mode: false

- name: Copy compare_serverclass_data.py to localhost
  connection: local
  become: false
  ansible.builtin.copy:
    src: "{{ role_path }}/files/bin/compare_serverclass_data.py"
    dest: "{{ (cca_local_tmp_dir | default('/tmp/cca_tmp')) }}/{{ cca_runid }}/{{ environment_name }}/compare_serverclass_data.py"
    mode: '0755'
  delegate_to: localhost
  changed_when: false
  check_mode: false

- name: Ensure directory for output files on localhost
  connection: local
  become: false
  ansible.builtin.file:
    path: "{{ (cca_local_tmp_dir | default('/tmp/cca_tmp')) }}/{{ cca_runid }}/{{ environment_name }}/localhost"
    state: 'directory'
    mode: '0755'
    recurse: true
  delegate_to: localhost
  changed_when: false
  check_mode: false

- name: Ensure directory for output files on remote host
  ansible.builtin.file:
    path: "{{ [cca_remote_tmp_dir | default('/tmp'),
               cca_runid, environment_name,
               hostvars['localhost']['ds_inventory_hostname']] | path_join }}"
    state: 'directory'
    mode: '0755'
    recurse: true
  changed_when: false
  check_mode: false

- name: Run sc_parser.py on localhost
  connection: local
  become: false
  ansible.builtin.command: >
    {{ ansible_python_interpreter }} {{ role_path }}/files/bin/sc_parser.py
    {{ local_directory }}
    {{ [cca_local_tmp_dir | default('/tmp/cca_tmp'), cca_runid, environment_name, 'localhost', 'serverclass_data_local.json'] | path_join }}
    {{ [cca_local_tmp_dir | default('/tmp/cca_tmp'), cca_runid, environment_name, 'localhost', 'duplicates_data_local.json'] | path_join }}
    {{ [cca_local_tmp_dir | default('/tmp/cca_tmp'), cca_runid, environment_name, 'localhost'] | path_join }}
  delegate_to: localhost
  register: local_result
  changed_when: false
  check_mode: false

- name: Read duplicates data
  connection: local
  become: false
  delegate_to: localhost
  ansible.builtin.slurp:
    src: "{{ (cca_local_tmp_dir | default('/tmp/cca_tmp')) }}/{{ cca_runid }}/{{ environment_name }}/localhost/duplicates_data_local.json"
  register: duplicates_data

- name: Check if duplicates data is present
  ansible.builtin.set_fact:
    duplicates_present: "{{ duplicates_data.content | b64decode | from_json }}"

- name: Fail if duplicates data is present
  ansible.builtin.fail:
    msg: "There are duplicate entries in the serverclass data: {{ duplicates_present | to_nice_json }}"
  when: >
    duplicates_present.duplicate_keys | length > 0 or
    duplicates_present.duplicate_sections | length > 0

- name: Set remote and local base path
  ansible.builtin.set_fact:
    remote_base_path: >-
      {{ [cca_remote_tmp_dir | default('/tmp'),
         cca_runid, environment_name, hostvars['localhost']['ds_inventory_hostname']] | path_join }}
    local_base_path: >-
      {{ [cca_local_tmp_dir | default('/tmp/cca_tmp'),
         cca_runid, environment_name, hostvars['localhost']['ds_inventory_hostname']] | path_join }}

- name: Set intermediate variable
  ansible.builtin.set_fact:
    remote_serverclass_json: "{{ [remote_base_path, 'serverclass_data_remote.json'] | path_join }}"
    remote_duplicates_json: "{{ [remote_base_path, 'duplicates_data_remote.json'] | path_join }}"
    local_serverclass_json: "{{ [local_base_path, 'serverclass_data_remote.json'] | path_join }}"
    local_duplicates_json: "{{ [local_base_path, 'duplicates_data_remote.json'] | path_join }}"
    compare_script_path: "{{ [cca_local_tmp_dir | default('/tmp/cca_tmp'), cca_runid, environment_name, 'compare_serverclass_data.py'] | path_join }}"

- name: Run sc_parser.py on remote host
  ansible.builtin.command: >
    {{ ansible_python_interpreter }} {{ [cca_remote_tmp_dir | default('/tmp'), 'bin', 'sc_parser.py'] | path_join }}
    {{ remote_directory }}
    {{ remote_serverclass_json }}
    {{ remote_duplicates_json }}
    {{ remote_base_path }}
    "cca_merged_serverclass_*"
  register: remote_result
  changed_when: false
  check_mode: false

- name: Fetch remote serverclass data
  ansible.builtin.fetch:
    src: "{{ remote_serverclass_json }}"
    dest: "{{ local_serverclass_json }}"
    flat: true
  changed_when: false
  check_mode: false

- name: Fetch remote duplicates data
  ansible.builtin.fetch:
    src: "{{ remote_duplicates_json }}"
    dest: "{{ local_duplicates_json }}"
    flat: true
  changed_when: false
  check_mode: false

- name: Compare local and remote serverclass data
  connection: local
  become: false
  ansible.builtin.command: >
    {{ ansible_python_interpreter }} {{ compare_script_path }}
    {{ [cca_local_tmp_dir | default('/tmp/cca_tmp'), cca_runid, environment_name, 'localhost', 'serverclass_data_local.json'] | path_join }}
    {{ local_serverclass_json }}
  delegate_to: localhost
  changed_when: false
  no_log: "{{ hide_password }}"
  register: compare_serverclass_output
  check_mode: false

- name: Cleanup temporary files on remote
  ansible.builtin.file:
    path: "{{ (cca_remote_tmp_dir | default('/tmp')) }}/bin/sc_parser.py"
    state: absent
  changed_when: false
  check_mode: false

- name: Cleanup temporary JSON files on remote
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ remote_serverclass_json }}"
    - "{{ remote_duplicates_json }}"
  changed_when: false
  check_mode: false

- name: Cleanup unique directories on remote
  become: true
  ansible.builtin.file:
    path: "{{ remote_base_path }}"
    state: absent
  changed_when: false
  check_mode: false
